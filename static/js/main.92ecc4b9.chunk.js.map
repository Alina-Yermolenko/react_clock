{"version":3,"sources":["components/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","date","Date","toLocaleTimeString","timerId","this","window","setInterval","setState","clearInterval","className","props","name","React","Component","getRandomName","value","Math","random","toString","slice","App","hasClock","clockName","newRandomName","noClock","document","addEventListener","_prevProps","currentProps","console","log","ReactDOM","render","getElementById"],"mappings":"sNAUaA,EAAb,4MACEC,MAAQ,CACNC,MAAM,IAAIC,MAAOC,sBAFrB,EAKEC,QAAU,EALZ,uDAOE,WAAqB,IAAD,OAClBC,KAAKD,QAAUE,OAAOC,aAAY,WAChC,EAAKC,SAAS,CAAEP,MAAM,IAAIC,MAAOC,yBAChC,OAVP,kCAaE,WACEG,OAAOG,cAAcJ,KAAKD,WAd9B,oBAiBE,WACE,OAEE,cADA,CACA,OAAKM,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGL,KAAKM,MAAMC,OAGb,YAED,sBAAMF,UAAU,cAAhB,SACGL,KAAKL,MAAMC,cA5BtB,GAA2BY,IAAMC,WCNjC,SAASC,IACP,IAAMC,EAAQC,KAAKC,SAASC,WAAWC,MAAM,EAAG,GAEhD,MAAM,SAAN,OAAgBJ,GAQX,IAAMK,EAAb,4MACErB,MAAQ,CAENsB,UAAU,EACVC,UAAWR,KAJf,EAOES,cAAgB,EAPlB,EA2BEC,QAAU,WACR,EAAKjB,SAAS,CAAEc,UAAU,KA5B9B,uDASE,WAAqB,IAAD,OAClBjB,KAAKmB,cAAgBlB,OAAOC,aAAY,WACtC,EAAKC,SAAS,CAAEe,UAAWR,QAC1B,MAEHW,SAASC,iBAAiB,cAAetB,KAAKoB,SAE9CC,SAASC,iBAAiB,SAAS,WAEjC,EAAKnB,SAAS,CAAEc,UAAU,SAlBhC,gCAsBE,SAAmBM,EAAgBC,GAEjCC,QAAQC,IAAR,uBAA4BF,EAAaN,UAAzC,eAAyDlB,KAAKL,MAAMuB,cAxBxE,oBAuCE,WACE,OACE,sBAAKb,UAAU,MAAf,UACE,6CACCL,KAAKL,MAAMsB,UAAY,cAAC,EAAD,CAAOV,KAAMP,KAAKL,MAAMuB,mBA3CxD,GAAyBV,IAAMC,WCZ/BkB,IAASC,OACP,cAAC,EAAD,IACAP,SAASQ,eAAe,W","file":"static/js/main.92ecc4b9.chunk.js","sourcesContent":["import React from 'react';\n\ntype Props = {\n  name: string\n};\n\ntype State = {\n  date: string,\n};\n\nexport class Clock extends React.Component<Props, State> {\n  state = {\n    date: new Date().toLocaleTimeString(),\n  };\n\n  timerId = 0;\n\n  componentDidMount() {\n    this.timerId = window.setInterval(() => {\n      this.setState({ date: new Date().toLocaleTimeString() });\n    }, 1000);\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.timerId);\n  }\n\n  render() {\n    return (\n      // console.log('fff')\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {this.props.name}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {this.state.date}\n        </span>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Clock } from './components/Clock';\n\nfunction getRandomName(): string {\n  const value = Math.random().toString().slice(2, 6);\n\n  return `Clock-${value}`;\n}\n\ntype State = {\n  clockName: string;\n  hasClock: boolean;\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    // date: new Date(),\n    hasClock: true,\n    clockName: getRandomName(),\n  };\n\n  newRandomName = 0;\n\n  componentDidMount() {\n    this.newRandomName = window.setInterval(() => {\n      this.setState({ clockName: getRandomName() });\n    }, 3300);\n\n    document.addEventListener('contextmenu', this.noClock);\n\n    document.addEventListener('click', (\n    ) => {\n      this.setState({ hasClock: true });\n    });\n  }\n\n  componentDidUpdate(_prevProps: {}, currentProps: State) {\n    // eslint-disable-next-line no-console\n    console.log(`Renamed from ${currentProps.clockName} to ${this.state.clockName}`);\n  }\n\n  noClock = () => {\n    this.setState({ hasClock: false });\n  };\n  // componentWillUnmount() {\n  //   console.log('fooooo')\n  //   document.removeEventListener('contextmenu', this.noClock);\n  //   window.clearInterval(this.newRandomName);\n  // }\n\n  // this code stops the timer\n  // window.clearInterval(timerId);\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        {this.state.hasClock && <Clock name={this.state.clockName} />}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}